{"version":3,"sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/quantize.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-scale/src/quantile.js","../node_modules/@vx/pattern/esm/patterns/Pattern.js","../node_modules/@vx/pattern/esm/constants/index.js","../node_modules/@vx/pattern/esm/patterns/Lines.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js"],"names":["a","b","NaN","initRange","domain","range","arguments","length","this","numbers","values","valueof","_iterator","_step","value","index","_iterator2","_step2","_value","_regeneratorRuntime","wrap","_context","prev","next","undefined","_createForOfIteratorHelper","s","n","done","t0","e","f","finish","t1","stop","_marked","x","e10","Math","sqrt","e5","e2","start","count","reverse","ticks","step","i","tickIncrement","isFinite","r0","round","r1","Array","max","power","floor","log","LN10","error","pow","min","c","slice","t","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","d","Date","setTime","k","constant","number","color","rgb","string","date","numberArray","isArray","valueOf","toString","isNaN","object","unit","identity","normalize","bimap","interpolate","d0","d1","polymap","j","r","bisect","transformer","transform","untransform","unknown","piecewise","output","input","interpolateValue","clamp","rescale","clamper","scale","map","invert","y","interpolateNumber","_","from","rangeRound","interpolateRound","u","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","trim","type","prototype","formatDecimalParts","p","toExponential","indexOf","coefficient","prefixExponent","locale","format","formatPrefix","abs","exponent","join","toFixed","toLocaleString","replace","toPrecision","formatRounded","toUpperCase","prefixes","grouping","thousands","group","call","Number","g","push","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","formatTypes","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","i1","i0","formatTrim","charCodeAt","Infinity","padding","formatLocale","tickFormat","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","linearish","nice","prestep","maxIter","ceil","linear","copy","source","apply","quantize","x0","x1","_ref","_slicedToArray","invertExtent","thresholds","EOL","EOF","objectConverter","columns","Function","name","JSON","stringify","inferColumns","rows","columnSet","Object","create","forEach","row","column","pad","formatDate","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","parseRows","text","N","I","eof","eol","token","preformatBody","formatValue","formatRow","parse","convert","customConverter","concat","formatBody","formatRows","csv","dsv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","init","fetch","then","dsvParse","quantileSorted","value0","quantile","threshold","err","sort","ascending","quantiles","Pattern","id","height","children","React","createElement","patternUnits","propTypes","_pt","isRequired","node","PatternOrientation","horizontal","vertical","diagonal","diagonalRightToLeft","pathForOrientation","orientation","Lines","_ref2","stroke","strokeWidth","strokeDasharray","_ref2$strokeLinecap","strokeLinecap","_ref2$shapeRendering","shapeRendering","_ref2$orientation","background","className","orientations","cx","o","key","oneOfType","oneOf","array","delta","compare","left","lo","hi","mid","ascendingComparator","center","right","ascendingBisect","bisector","bisectRight"],"mappings":"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","file":"static/js/80.e2b65f0e.chunk.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import _pt from \"prop-types\";\nimport React from 'react';\nexport default function Pattern(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"pattern\", {\n    id: id,\n    width: width,\n    height: height,\n    patternUnits: \"userSpaceOnUse\"\n  }, children));\n}\nPattern.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  children: _pt.node.isRequired\n};","export var PatternOrientation = {\n  horizontal: 'horizontal',\n  vertical: 'vertical',\n  diagonal: 'diagonal',\n  diagonalRightToLeft: 'diagonalRightToLeft'\n};","import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\nexport function pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.vertical:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    case PatternOrientation.diagonalRightToLeft:\n      return \"M 0,0 l \" + height + \",\" + height + \"\\n        M \" + -height / 4 + \",\" + 3 / 4 * height + \" l \" + height / 2 + \",\" + height / 2 + \"\\n        M \" + 3 / 4 * height + \",\" + -height / 4 + \" l \" + height / 2 + \",\" + height / 2;\n\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\nexport default function Lines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    className: cx('vx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: \"vx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('vx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n"],"sourceRoot":""}